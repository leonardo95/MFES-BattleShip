class CellBoard
types
	public coordinates = seq of int;
	
values
-- TODO Define values here

instance variables
	public x_coord: int;
	public y_coord: int;
	public striked: bool;
	public withShip: bool;
	public myBoard: Board;
	
	inv verifyCoordinates([x_coord] ^ [y_coord]);
	
operations
	public CellBoard: int * int ==> CellBoard
		CellBoard(x, y) == 
		(
			x_coord := x;
			y_coord := y;
		)
	pre verifyCoordinates([x] ^ [y]);
	
	public setBoard: Board ==> ()
		setBoard(board) ==
		(
			myBoard := board;
		)
	pre is_Board(board);

functions
	public verifyCoordinates: coordinates -> bool
		verifyCoordinates(coordinates) ==
			hd coordinates >= 1 and  hd coordinates <= Board`BoardSize
			and hd (tl coordinates) >= 1 and hd (tl coordinates) <= Board`BoardSize;
			
traces
-- TODO Define Combinatorial Test Traces here
end CellBoard